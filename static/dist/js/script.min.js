function initializeSocketIO(){var e=io();e.on("log_update",function(e){var t=document.getElementById("terminal-output");t.innerHTML+=e.data+"\n",t.scrollTop=t.scrollHeight}),e.on("progress_update",function(e){var t=document.getElementById(e.type+"-progress"),n=document.querySelector(`label[for="${e.type}-progress"]`);t&&(t.value=e.value,t.max=e.max),n&&(n.textContent=e.label)}),e.on("song_info_update",function(e){document.getElementById("song-url").textContent=e.song_url,document.getElementById("playlist-url").textContent=e.playlist_url,document.getElementById("song-title").textContent=e.title,document.getElementById("song-styles").textContent=e.styles.join(", ")}),e.on("file_updates",function(e){let t={"all_meta_tags.json":"meta-status","all_styles.json":"styles-status","song_meta_mapping.json":"meta-mapping-status","song_styles_mapping.json":"styles-mapping-status"};Object.values(t).forEach(e=>{e=document.getElementById(e);e&&(e.classList.remove("uk-card-primary"),e.classList.add("uk-card-secondary"))}),e.updated_files.forEach(e=>{t[e]&&(e=document.getElementById(t[e]))&&(e.classList.remove("uk-card-secondary"),e.classList.add("uk-card-primary"))})})}function initializeTaskManager(){var e=io();document.getElementById("thread-modal");let i=document.getElementById("active-threads"),s=document.getElementById("task-card-template");function r(){fetch("/api/threads").then(e=>e.json()).then(e=>{updateThreadCount(Object.keys(e).length),i.innerHTML="",Object.entries(e).forEach(([e,t])=>{var n=s.content.cloneNode(!0),a=(n.querySelector(".task-name").textContent=e,n.querySelector(".task-status").textContent="Status: "+t.status,n.querySelector(".pause-task")),o=n.querySelector(".resume-task");"paused"===t.status?(a.style.display="none",o.style.display="inline-block"):(a.style.display="inline-block",o.style.display="none"),a.onclick=()=>{fetch(`/api/threads/${e}/pause`).then(()=>r())},o.onclick=()=>{fetch(`/api/threads/${e}/resume`).then(()=>r())},n.querySelector(".stop-task").onclick=()=>{fetch(`/api/threads/${e}/stop`).then(()=>r())},i.appendChild(n)})})}e.on("thread_started",r),e.on("thread_stopped",r),e.on("thread_status_changed",r)}function initializeNavigation(){document.querySelectorAll('a[data-ajax="true"]').forEach(e=>{e.addEventListener("click",function(e){e.preventDefault();let t=this.getAttribute("href");fetch(t,{headers:{"X-Requested-With":"XMLHttpRequest"}}).then(e=>e.text()).then(e=>{document.getElementById("main-content").innerHTML=e,history.pushState({},"",t),loadPageSpecificFunctions()})})})}function loadPageSpecificFunctions(){var e=window.location.pathname.split("/").pop()||"home";switch(removeExistingListeners(),e){case"scrape":initScraperControls();break;case"prepare":initPreparationControls();break;case"train":initTrainingControls();break;case"generate":initGenerationControls();break;case"settings":initSettingsControls()}}function initScraperControls(){var e=document.getElementById("scrape-playlists"),t=document.getElementById("scrape-songs");e&&e.addEventListener("click",function(){fetch("/api/scrape/playlists",{method:"POST"}).then(e=>e.text()).then(e=>{try{return JSON.parse(e)}catch{return{message:e}}}).then(e=>console.log("Started playlist scraping:",e))}),t&&t.addEventListener("click",function(){fetch("/api/scrape/songs",{method:"POST"}).then(e=>e.text()).then(e=>{try{return JSON.parse(e)}catch{return{message:e}}}).then(e=>console.log("Started song scraping:",e))})}function initPreparationControls(){var e=document.getElementById("prepare-data");e&&e.addEventListener("click",function(){fetch("/api/prepare",{method:"POST"}).then(e=>e.json()).then(e=>console.log("Started data preparation"))})}function initTrainingControls(){var e=document.getElementById("start-training"),t=document.getElementById("stop-training");e&&e.addEventListener("click",function(){var e=collectTrainingParameters();fetch("/api/train/start",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(e=>e.json()).then(e=>console.log("Started training"))}),t&&t.addEventListener("click",function(){fetch("/api/train/stop",{method:"POST"})})}function initGenerationControls(){var e=document.getElementById("generate-lyrics");e&&e.addEventListener("click",function(){var e={model:document.getElementById("model-select").value,title:document.getElementById("song-title").value,style:document.getElementById("style-input").value,prompt:document.getElementById("prompt-input").value};fetch("/api/generate",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(e=>e.json()).then(e=>{document.getElementById("generation-output").textContent=e.lyrics})})}function initSettingsControls(){var e=document.getElementById("save-settings");e&&e.addEventListener("click",function(){var e=collectSettingsData();fetch("/api/settings",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(e=>e.json()).then(e=>console.log("Settings saved"))})}function removeExistingListeners(){document.querySelectorAll("button[data-initialized]").forEach(e=>{var t=e.cloneNode(!0);e.parentNode.replaceChild(t,e)})}function updateProgress(e){var t=document.getElementById(e.type+"-progress");t&&(t.value=e.value,t.max=e.max)}function updateSongInfo(e){Object.entries(e).forEach(([e,t])=>{e=document.getElementById("song-"+e);e&&(e.textContent=Array.isArray(t)?t.join(", "):t)})}function collectTrainingParameters(){return{epochs:document.getElementById("epochs").value,learningRate:document.getElementById("learning-rate").value,batchSize:document.getElementById("batch-size").value,maxLength:document.getElementById("max-length").value,warmupSteps:document.getElementById("warmup-steps").value,weightDecay:document.getElementById("weight-decay").value,gradientAccumulationSteps:document.getElementById("gradient-accumulation-steps").value}}function collectSettingsData(){return{setting1:document.getElementById("setting1").value,setting2:document.getElementById("setting2").value}}function updateThreadCount(e){var t=document.getElementById("thread-count");t&&(t.textContent=e)}document.addEventListener("DOMContentLoaded",function(){initializeSocketIO(),initializeTaskManager(),initializeNavigation(),loadPageSpecificFunctions()});